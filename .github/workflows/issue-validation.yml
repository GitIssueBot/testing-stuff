name: "Check for bundle"
on:
  issues:
    types: ["opened", "edited"]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@v5
      env:
        REMINDER: >
          Hi @${{ github.event.issue.user.login }}!


          It looks like you didn't upload a [system info bundle](https://community.octoprint.org/t/29887) as requested by the template.
          A bundle is required to further process your issue. It contains important logs and
          system information to be able to put your issue into context and give pointers as to
          what has happened.


          Please upload a bundle zip file to the original issue post. Actually upload the file please and 
          do not paste some link to a cloud provider, we want to have everything in one place here. 
          

          Without the availability of a bundle, your issue will have to be closed.


          Thank you for your collaboration.
      with:
        script: |
          const { REMINDER } = process.env;
          const bundleRegex = /\[(octoprint-systeminfo-\d{14}\.zip)\]\(([^)]+)\)/g;
          const marker = "<!-- check_for_bundle -->";

          console.log("REMINDER", REMINDER);
          console.log("context", context);

          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          })
          console.log("comments", comments);

          const comment = comments.data.find(c => c.user.login === "github-actions[bot]" && c.body.includes(marker));
          console.log("Comment", comment);

          comments.data.forEach(c => console.log("Comment author", c.user));

          const found = !!context.payload.issue.body.match(bundleRegex);
          console.log("found", found);

          if (!found && !comment) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: REMINDER + "\n" + marker
            });
          } else if (found && comment) {
            await github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment.id
            });
          }
